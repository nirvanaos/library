/// \file
/*
* Nirvana runtime library.
*
* This is a part of the Nirvana project.
*
* Author: Igor Popov
*
* Copyright (c) 2021 Igor Popov.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public
* License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*
* Send comments and/or bug reports to:
*  popov.nirvana@gmail.com
*/
#ifndef NIRVANA_DOMAINS_IDL_
#define NIRVANA_DOMAINS_IDL_

module Nirvana {

interface SysDomain;

/// Protection domain
interface ProtDomain
{
	/// \returns The user name.
	readonly attribute string user;

	/// Binds a static object.
	/// 
	/// \param name The object name.
	/// \returns Object.
	/// \throws OBJECT_NOT_EXIST Object with that name not found.
	/// \throws INV_OBJREF Object with that name exists but it is pseudo object or singleton.
	Object bind (in string name);

	/// \returns System domain.
	readonly attribute SysDomain sys_domain;

	void shutdown (in unsigned short flags);
};

typedef unsigned short Version [4];

/// System domain
interface SysDomain
{
	/// \returns The Nirvana version.
	readonly attribute Version version;

	typedef sequence <unsigned short> Platforms;

	/// \returns Supported platform identifiers.
	/// 
	/// First element is the host platform.
	readonly attribute Platforms supported_platforms;

	SysDomain connect (in string user, in string password);

	/// \returns Protection domain associated with system domain.
	readonly attribute ProtDomain prot_domain;

	ProtDomain create_prot_domain (in unsigned short platform);
	ProtDomain create_prot_domain_as_user (in unsigned short platform, in string user, in string password);

	void shutdown (in unsigned short flags);
};

};

#endif
