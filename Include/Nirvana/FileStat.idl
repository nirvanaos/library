/*
* Nirvana runtime library.
*
* This is a part of the Nirvana project.
*
* Author: Igor Popov
*
* Copyright (c) 2021 Igor Popov.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public
* License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*
* Send comments and/or bug reports to:
*  popov.nirvana@gmail.com
*/
#ifndef NIRVANA_FILESTAT_IDL_
#define NIRVANA_FILESTAT_IDL_

#include <CORBA/TimeBase.idl>

module CORBA {

typeprefix CORBA "omg.org";

typedef sequence <octet> OctetSeq;

};

module Nirvana {

typedef CORBA::OctetSeq SecurityId;
typedef CORBA::OctetSeq DirItemId;

typedef unsigned short mode_t;
typedef unsigned long dev_t;
typedef unsigned long nlink_t;
typedef unsigned long blksize_t;
typedef unsigned long long blkcnt_t;
typedef unsigned long long ino_t;

typedef unsigned long long FileSize;
typedef long long FileOff;

/// \brief File status structure.
///   TimeBase::UtcT::tdf fields are always zero.
///   If TimeBase::UtcT::time field is zero than this
///   file time value is unavailable for a directory item.
struct FileStat
{
	/// Unique filesystem item ID.
	DirItemId id;

	/// Owner user ID.
	SecurityId owner;

	/// Owner group ID.
	SecurityId group;

	/// File size.
	FileSize size;

	TimeBase::UtcT
		creation_time,    ///< File creation time.
		last_access_time, ///< Last data access timestamp.
		last_write_time;  ///< Last data modification timestamp.

	/// Number of blocks allocated for this object.
	blkcnt_t blkcnt;

	/// A file system - specific preferred I / O block size for this object.
	blksize_t blksize;

	/// Device ID of device containing file.
	dev_t dev;

	/// Number of hard links to the file.
	nlink_t nlink;

	/// Mode bits.
	mode_t mode;
};

};

#endif
